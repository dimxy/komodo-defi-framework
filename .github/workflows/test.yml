name: Test
on:
  push:
    branches-ignore:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  FROM_SHARED_RUNNER: true

jobs:
  linux-x86-64-unit:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    env:
      BOB_PASSPHRASE: ${{ secrets.BOB_PASSPHRASE_LINUX }}
      BOB_USERPASS: ${{ secrets.BOB_USERPASS_LINUX }}
      ALICE_PASSPHRASE: ${{ secrets.ALICE_PASSPHRASE_LINUX }}
      ALICE_USERPASS: ${{ secrets.ALICE_USERPASS_LINUX }}
      TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Build cache
        uses: ./.github/actions/build-cache

      - name: Test
        run: |
          cargo test --bins --lib --no-fail-fast

  mac-x86-64-unit:
    timeout-minutes: 90
    runs-on: macos-latest
    env:
      BOB_PASSPHRASE: ${{ secrets.BOB_PASSPHRASE_MACOS }}
      BOB_USERPASS: ${{ secrets.BOB_USERPASS_MACOS }}
      ALICE_PASSPHRASE: ${{ secrets.ALICE_PASSPHRASE_MACOS }}
      ALICE_USERPASS: ${{ secrets.ALICE_USERPASS_MACOS }}
      TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Build cache
        uses: ./.github/actions/build-cache

      - name: Test
        run: |
          cargo test --bins --lib --no-fail-fast

  win-x86-64-unit:
    timeout-minutes: 90
    runs-on: windows-latest
    env:
      BOB_PASSPHRASE: ${{ secrets.BOB_PASSPHRASE_WIN }}
      BOB_USERPASS: ${{ secrets.BOB_USERPASS_WIN }}
      ALICE_PASSPHRASE: ${{ secrets.ALICE_PASSPHRASE_WIN }}
      ALICE_USERPASS: ${{ secrets.ALICE_USERPASS_WIN }}
      TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Build cache
        uses: ./.github/actions/build-cache

      - name: Test
        run: |
          cargo test --bins --lib --no-fail-fast

  linux-x86-64-kdf-integration:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    env:
      BOB_PASSPHRASE: ${{ secrets.BOB_PASSPHRASE_LINUX }}
      BOB_USERPASS: ${{ secrets.BOB_USERPASS_LINUX }}
      ALICE_PASSPHRASE: ${{ secrets.ALICE_PASSPHRASE_LINUX }}
      ALICE_USERPASS: ${{ secrets.ALICE_USERPASS_LINUX }}
      TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Build cache
        uses: ./.github/actions/build-cache

      - name: Test
        run: |
          wget -O - https://raw.githubusercontent.com/KomodoPlatform/komodo/0adeeabdd484ef40539d1275c6a765f5c530ea79/zcutil/fetch-params-alt.sh | bash
          cargo test --test 'mm2_tests_main' --no-fail-fast

  mac-x86-64-kdf-integration:
    timeout-minutes: 90
    runs-on: macos-latest
    env:
      BOB_PASSPHRASE: ${{ secrets.BOB_PASSPHRASE_MACOS }}
      BOB_USERPASS: ${{ secrets.BOB_USERPASS_MACOS }}
      ALICE_PASSPHRASE: ${{ secrets.ALICE_PASSPHRASE_MACOS }}
      ALICE_USERPASS: ${{ secrets.ALICE_USERPASS_MACOS }}
      TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Set loopback address
        run: ./scripts/ci/lo0_config.sh

      - name: Build cache
        uses: ./.github/actions/build-cache

      - name: Test
        run: |
          wget -O - https://raw.githubusercontent.com/KomodoPlatform/komodo/0adeeabdd484ef40539d1275c6a765f5c530ea79/zcutil/fetch-params-alt.sh | bash
          cargo test --test 'mm2_tests_main' --no-fail-fast

  win-x86-64-kdf-integration:
    timeout-minutes: 90
    runs-on: windows-latest
    env:
      BOB_PASSPHRASE: ${{ secrets.BOB_PASSPHRASE_WIN }}
      BOB_USERPASS: ${{ secrets.BOB_USERPASS_WIN }}
      ALICE_PASSPHRASE: ${{ secrets.ALICE_PASSPHRASE_WIN }}
      ALICE_USERPASS: ${{ secrets.ALICE_USERPASS_WIN }}
      TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Build cache
        uses: ./.github/actions/build-cache

      - name: Download wget64
        uses: ./.github/actions/download-and-verify
        with:
          url: "https://github.com/KomodoPlatform/komodo/raw/d456be35acd1f8584e1e4f971aea27bd0644d5c5/zcutil/wget64.exe"
          output_file: "/wget64.exe"
          checksum: "d80719431dc22b0e4a070f61fab982b113a4ed9a6d4cf25e64b5be390dcadb94"

      - name: Test
        run: |
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/KomodoPlatform/komodo/0adeeabdd484ef40539d1275c6a765f5c530ea79/zcutil/fetch-params-alt.bat -OutFile \cmd.bat && \cmd.bat
          cargo test --test 'mm2_tests_main' --no-fail-fast

  docker-tests:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    env:
      BOB_PASSPHRASE: ${{ secrets.BOB_PASSPHRASE_LINUX }}
      BOB_USERPASS: ${{ secrets.BOB_USERPASS_LINUX }}
      ALICE_PASSPHRASE: ${{ secrets.ALICE_PASSPHRASE_LINUX }}
      ALICE_USERPASS: ${{ secrets.ALICE_USERPASS_LINUX }}
      TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Build cache
        uses: ./.github/actions/build-cache

      - name: Test
        run: |
          wget -O - https://raw.githubusercontent.com/KomodoPlatform/komodo/v0.8.1//zcutil/fetch-params-alt.sh | bash
          cargo test --test 'docker_tests_main' --features run-docker-tests --no-fail-fast

  wasm:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    env:
      BOB_PASSPHRASE: ${{ secrets.BOB_PASSPHRASE_LINUX }}
      BOB_USERPASS: ${{ secrets.BOB_USERPASS_LINUX }}
      ALICE_PASSPHRASE: ${{ secrets.ALICE_PASSPHRASE_LINUX }}
      ALICE_USERPASS: ${{ secrets.ALICE_USERPASS_LINUX }}
      TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01
          rustup target add wasm32-unknown-unknown

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Install wasm-pack
        # Use the latest wasm-pack for up-to-date compatibility coverage on KDF.
        # As we don't share any build artifacts from this pipeline, we don't need
        # to lock the version here.
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Download geckodriver
        uses: ./.github/actions/download-and-verify
        with:
          url: "https://github.com/mozilla/geckodriver/releases/download/v0.32.2/geckodriver-v0.32.2-linux64.tar.gz"
          output_file: "geckodriver-v0.32.2-linux64.tar.gz"
          checksum: "1eab226bf009599f5aa1d77d9ed4c374e10a03fd848b500be1b32cefd2cbec64"

      - name: Install firefox and geckodriver
        run: |
          sudo apt-get update -y
          sudo apt-get install -y firefox
          sudo tar -xzvf geckodriver-v0.32.2-linux64.tar.gz -C /bin
          sudo chmod +x /bin/geckodriver

      - name: Build cache
        uses: ./.github/actions/build-cache

      - name: Test
        run: WASM_BINDGEN_TEST_TIMEOUT=1200 GECKODRIVER=/bin/geckodriver wasm-pack test --firefox --headless mm2src/mm2_main
